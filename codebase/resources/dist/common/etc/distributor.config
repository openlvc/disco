# ================================
# Ditributor Configuration File
# ================================
# This file contains all available configuration options for the Disco Distributor.
#
# The distributor works by loading a number of links and bridging between them.
# There are link types that connect to local DIS networks, to external data relays,
# and so on. All data received on a link is reflected to the other connected links.
# By combining these you can build up simple or complex network graphs to define how
# information should be distributed.
#
# For example:
#
#   - Simple DIS Bridge: Create two DIS links, one connected to each network. They
#                        will reflect traffic from one over to the other.
#
#   - Longhaul Connection: Somewhere on the web, run a distributor that has a relay
#                          link loaded (for others to connect to). At each site, run
#                          a distributor with a local DIS link, and a WAN link that
#                          connects to the relay. This will gather traffic from the
#                          local link and forward it to the relay which will reflect
#                          it to all other connected links.
#
#
# Link Modes and Configuration
# ------------------------------
# Each link has a MODE which defines its behaviour:
#
#  - dis:     Standard DIS network connection
#  - wan:     Point-to-point connection to a remote relay point 
#  - relay:   Server link that accepts incoming wan connections
#  - pulse:   Heartbeats an ESPDU to all links at regular interval
#  - logging: Debugging. Simply prints all PDUs it receives
#
# To create a link, just make up a name and add it to the comma-separated list
# in `distributor.links`.
#
# To configure the link, you define the list of appropriate properties under
# the prefix `distributor.<link-name>`. For example:
#
#    distributor.links = <name1>, <name2>, ...
#    distributor.<name1>.mode = dis
#    distributor.<name1>.dis.address = ...
#    ...
#    distributor.<name2>.mode = wan
#    distributor.<name2>.wan.relay = ...
#
#
# Symbolic Names
# ------------------------------
# For certain network properties, symbolic names can be used in place of ip addresses
# or dns names. When a symbolic name is used, the first found address associated with a NIC
# that matches will be used. The following symbolic names are available:
#
#  - LOOPBACK:   127.0.0.1
#  - LINK_LOCAL: 169.254.1.0-169.254.254.255 inclusive
#  - SITE_LOCAL: 10.0.0.0/8 (255.0.0.0), 172.16.0.0/12 (255.240.0.0), 192.168.0.0/16 (255.255.0.0)
#  - GLOBAL:     Any address not in the above
#

# =========================================
# 1. General Settings
# =========================================

# (1.1) Distributor Logging
#        Log level and file for the Distributor. If the path is not an absolute location,
#        then path is relative to execution directory.
#
distributor.loglevel = INFO
distributor.logfile  = logs/distributor.log

# (1.2) Active Links
#        A comma-separated list of all links to load. These are the link names that are
#        then used to determine the prefixes that are used to look up further config
#        properties for the links.
#
#        For example, if `mylink` is in the list, all the config properties for it will
#        be searched for under the prefix `distributor.mylink`.
distributor.links = local, longhaul


# =========================================
# 2. DIS Links
# =========================================
#
# Connection to a DIS broadcast or multicast network.
#
# Of the list below, the following have additional notes:
#   - address:    Can be multicast ip, broadcast ip or BROADCAST symbolic name
#   - nic:        IP, DNS or symbolic name of address associated with NIC to use
#   - exerciseId: Exercise ID to join to. <any> will ignore exercise id on pdus
#   - siteId:     Specific ID or <random> to assign random id for local dis sim
#   - appId:      Specific ID or <random> to assign random id for local dis sim
#   - loglevel:   Threshold for printing log messages. OFF, FATAL, WARN, INFO, DEBUG, TRACE
#   - logfile:    Path to log file. <name> is substituted for the link name.
#
distributor.local.mode           = dis
distributor.local.dis.address    = BROADCAST
distributor.local.dis.port       = 3000
distributor.local.dis.nic        = SITE_LOCAL
distributor.local.dis.exerciseId = <any>
distributor.local.dis.siteId     = <random>
distributor.local.dis.appId      = <random>
distributor.local.dis.loglevel   = ERROR
distributor.local.dis.logtofile  = on
distributor.local.dis.logfile    = logs/distributor.<name>.log

# =========================================
# 3. WAN Links
# =========================================
#
# A point-to-point connection to a relay running somewhere else.
#
# Of the list below, the following have additional notes:
#   - relay: The ip or dns of the relay
#   - transport: <tcp|udp>
#   - bundling.maxSize: Flush bundled messages once they get to this size regardless
#   - bundling.maxTime: Max time (millis) to hold messages before flushing regardless
#
distributor.longhaul.mode                 = wan
distributor.longhaul.wan.relay            = virpac.openlvc.org
distributor.longhaul.wan.port             = 4919
distributor.longhaul.wan.transport        = tcp
distributor.longhaul.wan.bundling         = false
distributor.longhaul.wan.bundling.maxSize = 1400b
distributor.longhaul.wan.bundling.maxTime = 30

# =========================================
# 4. Relays
# =========================================
# Sample: Relay
#
# Server link that accepts incoming WAN connections and adds them to the
# list of those that get messages refelcted to/from them.
#
#   - address:   Address to listen on. IP, DNS or symbolic name.
#   - transport: <tcp|udp>
distributor.backbone.mode            = relay
distributor.backbone.relay.address   = SITE_LOCAL
distributor.backbone.relay.port      = 4919
distributor.backbone.relay.transport = <tcp|udp>

# =========================================
# 5. Pulse Link
# =========================================
#
# For debugging. Pushes a single entity and sends an ESPDU on an interval.
#
distributor.heartbeat.mode              = pulse
distributor.heartbeat.pulse.interval    = 5000
distributor.heartbeat.pulse.marking     = RELAY-SGP
distributor.heartbeat.pulse.enumeration = 1.5.0.1.0.0.0
distributor.heartbeat.pulse.exerciseId  = 1
distributor.heartbeat.pulse.siteId      = 0
distributor.heartbeat.pulse.appId       = 0

# =========================================
# 6. Logging Link
# =========================================
#
# For debugging. Logs a line for each PDU received with its source and type.
# Can optionally also log that to a file.
#
distributor.log.mode              = logging
distributor.log.logging.level     = INFO
distributor.log.logging.logtofile = false
distributor.log.logging.logfile   = logs/distributor.<name>.log

